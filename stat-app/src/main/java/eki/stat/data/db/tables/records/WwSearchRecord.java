/*
 * This file is generated by jOOQ.
 */
package eki.stat.data.db.tables.records;


import eki.stat.data.db.tables.WwSearch;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WwSearchRecord extends UpdatableRecordImpl<WwSearchRecord> implements Record11<Long, String, Integer, String, String[], String[], String, Integer, Boolean, Boolean, Timestamp> {

    private static final long serialVersionUID = -754541007;

    /**
     * Setter for <code>public.ww_search.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.ww_search.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.ww_search.search_word</code>.
     */
    public void setSearchWord(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.ww_search.search_word</code>.
     */
    public String getSearchWord() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.ww_search.homonym_nr</code>.
     */
    public void setHomonymNr(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.ww_search.homonym_nr</code>.
     */
    public Integer getHomonymNr() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.ww_search.search_mode</code>.
     */
    public void setSearchMode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.ww_search.search_mode</code>.
     */
    public String getSearchMode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.ww_search.destin_langs</code>.
     */
    public void setDestinLangs(String[] value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.ww_search.destin_langs</code>.
     */
    public String[] getDestinLangs() {
        return (String[]) get(4);
    }

    /**
     * Setter for <code>public.ww_search.dataset_codes</code>.
     */
    public void setDatasetCodes(String[] value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.ww_search.dataset_codes</code>.
     */
    public String[] getDatasetCodes() {
        return (String[]) get(5);
    }

    /**
     * Setter for <code>public.ww_search.search_uri</code>.
     */
    public void setSearchUri(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.ww_search.search_uri</code>.
     */
    public String getSearchUri() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.ww_search.result_count</code>.
     */
    public void setResultCount(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.ww_search.result_count</code>.
     */
    public Integer getResultCount() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.ww_search.results_exist</code>.
     */
    public void setResultsExist(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.ww_search.results_exist</code>.
     */
    public Boolean getResultsExist() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.ww_search.single_result</code>.
     */
    public void setSingleResult(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.ww_search.single_result</code>.
     */
    public Boolean getSingleResult() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>public.ww_search.event_on</code>.
     */
    public void setEventOn(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.ww_search.event_on</code>.
     */
    public Timestamp getEventOn() {
        return (Timestamp) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, String, Integer, String, String[], String[], String, Integer, Boolean, Boolean, Timestamp> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, String, Integer, String, String[], String[], String, Integer, Boolean, Boolean, Timestamp> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return WwSearch.WW_SEARCH.ID;
    }

    @Override
    public Field<String> field2() {
        return WwSearch.WW_SEARCH.SEARCH_WORD;
    }

    @Override
    public Field<Integer> field3() {
        return WwSearch.WW_SEARCH.HOMONYM_NR;
    }

    @Override
    public Field<String> field4() {
        return WwSearch.WW_SEARCH.SEARCH_MODE;
    }

    @Override
    public Field<String[]> field5() {
        return WwSearch.WW_SEARCH.DESTIN_LANGS;
    }

    @Override
    public Field<String[]> field6() {
        return WwSearch.WW_SEARCH.DATASET_CODES;
    }

    @Override
    public Field<String> field7() {
        return WwSearch.WW_SEARCH.SEARCH_URI;
    }

    @Override
    public Field<Integer> field8() {
        return WwSearch.WW_SEARCH.RESULT_COUNT;
    }

    @Override
    public Field<Boolean> field9() {
        return WwSearch.WW_SEARCH.RESULTS_EXIST;
    }

    @Override
    public Field<Boolean> field10() {
        return WwSearch.WW_SEARCH.SINGLE_RESULT;
    }

    @Override
    public Field<Timestamp> field11() {
        return WwSearch.WW_SEARCH.EVENT_ON;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getSearchWord();
    }

    @Override
    public Integer component3() {
        return getHomonymNr();
    }

    @Override
    public String component4() {
        return getSearchMode();
    }

    @Override
    public String[] component5() {
        return getDestinLangs();
    }

    @Override
    public String[] component6() {
        return getDatasetCodes();
    }

    @Override
    public String component7() {
        return getSearchUri();
    }

    @Override
    public Integer component8() {
        return getResultCount();
    }

    @Override
    public Boolean component9() {
        return getResultsExist();
    }

    @Override
    public Boolean component10() {
        return getSingleResult();
    }

    @Override
    public Timestamp component11() {
        return getEventOn();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getSearchWord();
    }

    @Override
    public Integer value3() {
        return getHomonymNr();
    }

    @Override
    public String value4() {
        return getSearchMode();
    }

    @Override
    public String[] value5() {
        return getDestinLangs();
    }

    @Override
    public String[] value6() {
        return getDatasetCodes();
    }

    @Override
    public String value7() {
        return getSearchUri();
    }

    @Override
    public Integer value8() {
        return getResultCount();
    }

    @Override
    public Boolean value9() {
        return getResultsExist();
    }

    @Override
    public Boolean value10() {
        return getSingleResult();
    }

    @Override
    public Timestamp value11() {
        return getEventOn();
    }

    @Override
    public WwSearchRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public WwSearchRecord value2(String value) {
        setSearchWord(value);
        return this;
    }

    @Override
    public WwSearchRecord value3(Integer value) {
        setHomonymNr(value);
        return this;
    }

    @Override
    public WwSearchRecord value4(String value) {
        setSearchMode(value);
        return this;
    }

    @Override
    public WwSearchRecord value5(String[] value) {
        setDestinLangs(value);
        return this;
    }

    @Override
    public WwSearchRecord value6(String[] value) {
        setDatasetCodes(value);
        return this;
    }

    @Override
    public WwSearchRecord value7(String value) {
        setSearchUri(value);
        return this;
    }

    @Override
    public WwSearchRecord value8(Integer value) {
        setResultCount(value);
        return this;
    }

    @Override
    public WwSearchRecord value9(Boolean value) {
        setResultsExist(value);
        return this;
    }

    @Override
    public WwSearchRecord value10(Boolean value) {
        setSingleResult(value);
        return this;
    }

    @Override
    public WwSearchRecord value11(Timestamp value) {
        setEventOn(value);
        return this;
    }

    @Override
    public WwSearchRecord values(Long value1, String value2, Integer value3, String value4, String[] value5, String[] value6, String value7, Integer value8, Boolean value9, Boolean value10, Timestamp value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WwSearchRecord
     */
    public WwSearchRecord() {
        super(WwSearch.WW_SEARCH);
    }

    /**
     * Create a detached, initialised WwSearchRecord
     */
    public WwSearchRecord(Long id, String searchWord, Integer homonymNr, String searchMode, String[] destinLangs, String[] datasetCodes, String searchUri, Integer resultCount, Boolean resultsExist, Boolean singleResult, Timestamp eventOn) {
        super(WwSearch.WW_SEARCH);

        set(0, id);
        set(1, searchWord);
        set(2, homonymNr);
        set(3, searchMode);
        set(4, destinLangs);
        set(5, datasetCodes);
        set(6, searchUri);
        set(7, resultCount);
        set(8, resultsExist);
        set(9, singleResult);
        set(10, eventOn);
    }
}
