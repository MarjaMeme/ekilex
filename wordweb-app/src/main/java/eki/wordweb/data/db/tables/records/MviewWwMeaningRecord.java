/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables.records;


import eki.wordweb.data.db.tables.MviewWwMeaning;
import eki.wordweb.data.db.udt.records.TypeDefinitionRecord;
import eki.wordweb.data.db.udt.records.TypeDomainRecord;
import eki.wordweb.data.db.udt.records.TypeFreeformRecord;
import eki.wordweb.data.db.udt.records.TypeMediaFileRecord;

import org.jooq.Field;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwMeaningRecord extends TableRecordImpl<MviewWwMeaningRecord> implements Record9<Long, TypeDomainRecord[], TypeMediaFileRecord[], TypeMediaFileRecord[], String[], String[], String[], TypeFreeformRecord[], TypeDefinitionRecord[]> {

    private static final long serialVersionUID = 726421197;

    /**
     * Setter for <code>public.mview_ww_meaning.meaning_id</code>.
     */
    public void setMeaningId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.mview_ww_meaning.meaning_id</code>.
     */
    public Long getMeaningId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.mview_ww_meaning.domain_codes</code>.
     */
    public void setDomainCodes(TypeDomainRecord[] value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.mview_ww_meaning.domain_codes</code>.
     */
    public TypeDomainRecord[] getDomainCodes() {
        return (TypeDomainRecord[]) get(1);
    }

    /**
     * Setter for <code>public.mview_ww_meaning.image_files</code>.
     */
    public void setImageFiles(TypeMediaFileRecord[] value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.mview_ww_meaning.image_files</code>.
     */
    public TypeMediaFileRecord[] getImageFiles() {
        return (TypeMediaFileRecord[]) get(2);
    }

    /**
     * Setter for <code>public.mview_ww_meaning.media_files</code>.
     */
    public void setMediaFiles(TypeMediaFileRecord[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.mview_ww_meaning.media_files</code>.
     */
    public TypeMediaFileRecord[] getMediaFiles() {
        return (TypeMediaFileRecord[]) get(3);
    }

    /**
     * Setter for <code>public.mview_ww_meaning.systematic_polysemy_patterns</code>.
     */
    public void setSystematicPolysemyPatterns(String[] value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.mview_ww_meaning.systematic_polysemy_patterns</code>.
     */
    public String[] getSystematicPolysemyPatterns() {
        return (String[]) get(4);
    }

    /**
     * Setter for <code>public.mview_ww_meaning.semantic_types</code>.
     */
    public void setSemanticTypes(String[] value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.mview_ww_meaning.semantic_types</code>.
     */
    public String[] getSemanticTypes() {
        return (String[]) get(5);
    }

    /**
     * Setter for <code>public.mview_ww_meaning.learner_comments</code>.
     */
    public void setLearnerComments(String[] value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.mview_ww_meaning.learner_comments</code>.
     */
    public String[] getLearnerComments() {
        return (String[]) get(6);
    }

    /**
     * Setter for <code>public.mview_ww_meaning.notes</code>.
     */
    public void setNotes(TypeFreeformRecord[] value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.mview_ww_meaning.notes</code>.
     */
    public TypeFreeformRecord[] getNotes() {
        return (TypeFreeformRecord[]) get(7);
    }

    /**
     * Setter for <code>public.mview_ww_meaning.definitions</code>.
     */
    public void setDefinitions(TypeDefinitionRecord[] value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.mview_ww_meaning.definitions</code>.
     */
    public TypeDefinitionRecord[] getDefinitions() {
        return (TypeDefinitionRecord[]) get(8);
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, TypeDomainRecord[], TypeMediaFileRecord[], TypeMediaFileRecord[], String[], String[], String[], TypeFreeformRecord[], TypeDefinitionRecord[]> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, TypeDomainRecord[], TypeMediaFileRecord[], TypeMediaFileRecord[], String[], String[], String[], TypeFreeformRecord[], TypeDefinitionRecord[]> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return MviewWwMeaning.MVIEW_WW_MEANING.MEANING_ID;
    }

    @Override
    public Field<TypeDomainRecord[]> field2() {
        return MviewWwMeaning.MVIEW_WW_MEANING.DOMAIN_CODES;
    }

    @Override
    public Field<TypeMediaFileRecord[]> field3() {
        return MviewWwMeaning.MVIEW_WW_MEANING.IMAGE_FILES;
    }

    @Override
    public Field<TypeMediaFileRecord[]> field4() {
        return MviewWwMeaning.MVIEW_WW_MEANING.MEDIA_FILES;
    }

    @Override
    public Field<String[]> field5() {
        return MviewWwMeaning.MVIEW_WW_MEANING.SYSTEMATIC_POLYSEMY_PATTERNS;
    }

    @Override
    public Field<String[]> field6() {
        return MviewWwMeaning.MVIEW_WW_MEANING.SEMANTIC_TYPES;
    }

    @Override
    public Field<String[]> field7() {
        return MviewWwMeaning.MVIEW_WW_MEANING.LEARNER_COMMENTS;
    }

    @Override
    public Field<TypeFreeformRecord[]> field8() {
        return MviewWwMeaning.MVIEW_WW_MEANING.NOTES;
    }

    @Override
    public Field<TypeDefinitionRecord[]> field9() {
        return MviewWwMeaning.MVIEW_WW_MEANING.DEFINITIONS;
    }

    @Override
    public Long component1() {
        return getMeaningId();
    }

    @Override
    public TypeDomainRecord[] component2() {
        return getDomainCodes();
    }

    @Override
    public TypeMediaFileRecord[] component3() {
        return getImageFiles();
    }

    @Override
    public TypeMediaFileRecord[] component4() {
        return getMediaFiles();
    }

    @Override
    public String[] component5() {
        return getSystematicPolysemyPatterns();
    }

    @Override
    public String[] component6() {
        return getSemanticTypes();
    }

    @Override
    public String[] component7() {
        return getLearnerComments();
    }

    @Override
    public TypeFreeformRecord[] component8() {
        return getNotes();
    }

    @Override
    public TypeDefinitionRecord[] component9() {
        return getDefinitions();
    }

    @Override
    public Long value1() {
        return getMeaningId();
    }

    @Override
    public TypeDomainRecord[] value2() {
        return getDomainCodes();
    }

    @Override
    public TypeMediaFileRecord[] value3() {
        return getImageFiles();
    }

    @Override
    public TypeMediaFileRecord[] value4() {
        return getMediaFiles();
    }

    @Override
    public String[] value5() {
        return getSystematicPolysemyPatterns();
    }

    @Override
    public String[] value6() {
        return getSemanticTypes();
    }

    @Override
    public String[] value7() {
        return getLearnerComments();
    }

    @Override
    public TypeFreeformRecord[] value8() {
        return getNotes();
    }

    @Override
    public TypeDefinitionRecord[] value9() {
        return getDefinitions();
    }

    @Override
    public MviewWwMeaningRecord value1(Long value) {
        setMeaningId(value);
        return this;
    }

    @Override
    public MviewWwMeaningRecord value2(TypeDomainRecord[] value) {
        setDomainCodes(value);
        return this;
    }

    @Override
    public MviewWwMeaningRecord value3(TypeMediaFileRecord[] value) {
        setImageFiles(value);
        return this;
    }

    @Override
    public MviewWwMeaningRecord value4(TypeMediaFileRecord[] value) {
        setMediaFiles(value);
        return this;
    }

    @Override
    public MviewWwMeaningRecord value5(String[] value) {
        setSystematicPolysemyPatterns(value);
        return this;
    }

    @Override
    public MviewWwMeaningRecord value6(String[] value) {
        setSemanticTypes(value);
        return this;
    }

    @Override
    public MviewWwMeaningRecord value7(String[] value) {
        setLearnerComments(value);
        return this;
    }

    @Override
    public MviewWwMeaningRecord value8(TypeFreeformRecord[] value) {
        setNotes(value);
        return this;
    }

    @Override
    public MviewWwMeaningRecord value9(TypeDefinitionRecord[] value) {
        setDefinitions(value);
        return this;
    }

    @Override
    public MviewWwMeaningRecord values(Long value1, TypeDomainRecord[] value2, TypeMediaFileRecord[] value3, TypeMediaFileRecord[] value4, String[] value5, String[] value6, String[] value7, TypeFreeformRecord[] value8, TypeDefinitionRecord[] value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MviewWwMeaningRecord
     */
    public MviewWwMeaningRecord() {
        super(MviewWwMeaning.MVIEW_WW_MEANING);
    }

    /**
     * Create a detached, initialised MviewWwMeaningRecord
     */
    public MviewWwMeaningRecord(Long meaningId, TypeDomainRecord[] domainCodes, TypeMediaFileRecord[] imageFiles, TypeMediaFileRecord[] mediaFiles, String[] systematicPolysemyPatterns, String[] semanticTypes, String[] learnerComments, TypeFreeformRecord[] notes, TypeDefinitionRecord[] definitions) {
        super(MviewWwMeaning.MVIEW_WW_MEANING);

        set(0, meaningId);
        set(1, domainCodes);
        set(2, imageFiles);
        set(3, mediaFiles);
        set(4, systematicPolysemyPatterns);
        set(5, semanticTypes);
        set(6, learnerComments);
        set(7, notes);
        set(8, definitions);
    }
}
