/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Indexes;
import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.MviewWwCountsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwCounts extends TableImpl<MviewWwCountsRecord> {

    private static final long serialVersionUID = 1807680857;

    /**
     * The reference instance of <code>public.mview_ww_counts</code>
     */
    public static final MviewWwCounts MVIEW_WW_COUNTS = new MviewWwCounts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MviewWwCountsRecord> getRecordType() {
        return MviewWwCountsRecord.class;
    }

    /**
     * The column <code>public.mview_ww_counts.dataset_code</code>.
     */
    public final TableField<MviewWwCountsRecord, String> DATASET_CODE = createField(DSL.name("dataset_code"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.mview_ww_counts.lang</code>.
     */
    public final TableField<MviewWwCountsRecord, String> LANG = createField(DSL.name("lang"), org.jooq.impl.SQLDataType.CHAR(3), this, "");

    /**
     * The column <code>public.mview_ww_counts.word_record_count</code>.
     */
    public final TableField<MviewWwCountsRecord, Long> WORD_RECORD_COUNT = createField(DSL.name("word_record_count"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_counts.word_value_count</code>.
     */
    public final TableField<MviewWwCountsRecord, Long> WORD_VALUE_COUNT = createField(DSL.name("word_value_count"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_counts.meaning_record_count</code>.
     */
    public final TableField<MviewWwCountsRecord, Long> MEANING_RECORD_COUNT = createField(DSL.name("meaning_record_count"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.mview_ww_counts</code> table reference
     */
    public MviewWwCounts() {
        this(DSL.name("mview_ww_counts"), null);
    }

    /**
     * Create an aliased <code>public.mview_ww_counts</code> table reference
     */
    public MviewWwCounts(String alias) {
        this(DSL.name(alias), MVIEW_WW_COUNTS);
    }

    /**
     * Create an aliased <code>public.mview_ww_counts</code> table reference
     */
    public MviewWwCounts(Name alias) {
        this(alias, MVIEW_WW_COUNTS);
    }

    private MviewWwCounts(Name alias, Table<MviewWwCountsRecord> aliased) {
        this(alias, aliased, null);
    }

    private MviewWwCounts(Name alias, Table<MviewWwCountsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.materializedView());
    }

    public <O extends Record> MviewWwCounts(Table<O> child, ForeignKey<O, MviewWwCountsRecord> key) {
        super(child, key, MVIEW_WW_COUNTS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MVIEW_WW_COUNTS_DATASET_CODE_IDX, Indexes.MVIEW_WW_COUNTS_LANG_IDX);
    }

    @Override
    public MviewWwCounts as(String alias) {
        return new MviewWwCounts(DSL.name(alias), this);
    }

    @Override
    public MviewWwCounts as(Name alias) {
        return new MviewWwCounts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwCounts rename(String name) {
        return new MviewWwCounts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwCounts rename(Name name) {
        return new MviewWwCounts(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, Long, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
