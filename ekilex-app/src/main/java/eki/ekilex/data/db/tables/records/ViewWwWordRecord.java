/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.tables.records;


import eki.ekilex.data.db.tables.ViewWwWord;
import eki.ekilex.data.db.udt.records.TypeDefinitionRecord;
import eki.ekilex.data.db.udt.records.TypeLangComplexityRecord;
import eki.ekilex.data.db.udt.records.TypeMeaningWordRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record22;
import org.jooq.Row22;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewWwWordRecord extends TableRecordImpl<ViewWwWordRecord> implements Record22<Long, String, String, String, String, Long, Integer, String[], String, String, String, String, Timestamp, TypeLangComplexityRecord[], TypeMeaningWordRecord[], TypeDefinitionRecord[], String[], BigDecimal, Long, Boolean, Long, Long> {

    private static final long serialVersionUID = 991699519;

    /**
     * Setter for <code>public.view_ww_word.word_id</code>.
     */
    public void setWordId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.view_ww_word.word_id</code>.
     */
    public Long getWordId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.view_ww_word.word</code>.
     */
    public void setWord(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.view_ww_word.word</code>.
     */
    public String getWord() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.view_ww_word.word_prese</code>.
     */
    public void setWordPrese(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.view_ww_word.word_prese</code>.
     */
    public String getWordPrese() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.view_ww_word.as_word</code>.
     */
    public void setAsWord(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.view_ww_word.as_word</code>.
     */
    public String getAsWord() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.view_ww_word.lang</code>.
     */
    public void setLang(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.view_ww_word.lang</code>.
     */
    public String getLang() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.view_ww_word.lang_order_by</code>.
     */
    public void setLangOrderBy(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.view_ww_word.lang_order_by</code>.
     */
    public Long getLangOrderBy() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.view_ww_word.homonym_nr</code>.
     */
    public void setHomonymNr(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.view_ww_word.homonym_nr</code>.
     */
    public Integer getHomonymNr() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.view_ww_word.word_type_codes</code>.
     */
    public void setWordTypeCodes(String[] value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.view_ww_word.word_type_codes</code>.
     */
    public String[] getWordTypeCodes() {
        return (String[]) get(7);
    }

    /**
     * Setter for <code>public.view_ww_word.display_morph_code</code>.
     */
    public void setDisplayMorphCode(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.view_ww_word.display_morph_code</code>.
     */
    public String getDisplayMorphCode() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.view_ww_word.gender_code</code>.
     */
    public void setGenderCode(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.view_ww_word.gender_code</code>.
     */
    public String getGenderCode() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.view_ww_word.aspect_code</code>.
     */
    public void setAspectCode(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.view_ww_word.aspect_code</code>.
     */
    public String getAspectCode() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.view_ww_word.vocal_form</code>.
     */
    public void setVocalForm(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.view_ww_word.vocal_form</code>.
     */
    public String getVocalForm() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.view_ww_word.last_activity_event_on</code>.
     */
    public void setLastActivityEventOn(Timestamp value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.view_ww_word.last_activity_event_on</code>.
     */
    public Timestamp getLastActivityEventOn() {
        return (Timestamp) get(12);
    }

    /**
     * Setter for <code>public.view_ww_word.lang_complexities</code>.
     */
    public void setLangComplexities(TypeLangComplexityRecord[] value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.view_ww_word.lang_complexities</code>.
     */
    public TypeLangComplexityRecord[] getLangComplexities() {
        return (TypeLangComplexityRecord[]) get(13);
    }

    /**
     * Setter for <code>public.view_ww_word.meaning_words</code>.
     */
    public void setMeaningWords(TypeMeaningWordRecord[] value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.view_ww_word.meaning_words</code>.
     */
    public TypeMeaningWordRecord[] getMeaningWords() {
        return (TypeMeaningWordRecord[]) get(14);
    }

    /**
     * Setter for <code>public.view_ww_word.definitions</code>.
     */
    public void setDefinitions(TypeDefinitionRecord[] value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.view_ww_word.definitions</code>.
     */
    public TypeDefinitionRecord[] getDefinitions() {
        return (TypeDefinitionRecord[]) get(15);
    }

    /**
     * Setter for <code>public.view_ww_word.od_word_recommendations</code>.
     */
    public void setOdWordRecommendations(String[] value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.view_ww_word.od_word_recommendations</code>.
     */
    public String[] getOdWordRecommendations() {
        return (String[]) get(16);
    }

    /**
     * Setter for <code>public.view_ww_word.freq_value</code>.
     */
    public void setFreqValue(BigDecimal value) {
        set(17, value);
    }

    /**
     * Getter for <code>public.view_ww_word.freq_value</code>.
     */
    public BigDecimal getFreqValue() {
        return (BigDecimal) get(17);
    }

    /**
     * Setter for <code>public.view_ww_word.freq_rank</code>.
     */
    public void setFreqRank(Long value) {
        set(18, value);
    }

    /**
     * Getter for <code>public.view_ww_word.freq_rank</code>.
     */
    public Long getFreqRank() {
        return (Long) get(18);
    }

    /**
     * Setter for <code>public.view_ww_word.forms_exist</code>.
     */
    public void setFormsExist(Boolean value) {
        set(19, value);
    }

    /**
     * Getter for <code>public.view_ww_word.forms_exist</code>.
     */
    public Boolean getFormsExist() {
        return (Boolean) get(19);
    }

    /**
     * Setter for <code>public.view_ww_word.min_ds_order_by</code>.
     */
    public void setMinDsOrderBy(Long value) {
        set(20, value);
    }

    /**
     * Getter for <code>public.view_ww_word.min_ds_order_by</code>.
     */
    public Long getMinDsOrderBy() {
        return (Long) get(20);
    }

    /**
     * Setter for <code>public.view_ww_word.word_type_order_by</code>.
     */
    public void setWordTypeOrderBy(Long value) {
        set(21, value);
    }

    /**
     * Getter for <code>public.view_ww_word.word_type_order_by</code>.
     */
    public Long getWordTypeOrderBy() {
        return (Long) get(21);
    }

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row22<Long, String, String, String, String, Long, Integer, String[], String, String, String, String, Timestamp, TypeLangComplexityRecord[], TypeMeaningWordRecord[], TypeDefinitionRecord[], String[], BigDecimal, Long, Boolean, Long, Long> fieldsRow() {
        return (Row22) super.fieldsRow();
    }

    @Override
    public Row22<Long, String, String, String, String, Long, Integer, String[], String, String, String, String, Timestamp, TypeLangComplexityRecord[], TypeMeaningWordRecord[], TypeDefinitionRecord[], String[], BigDecimal, Long, Boolean, Long, Long> valuesRow() {
        return (Row22) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ViewWwWord.VIEW_WW_WORD.WORD_ID;
    }

    @Override
    public Field<String> field2() {
        return ViewWwWord.VIEW_WW_WORD.WORD;
    }

    @Override
    public Field<String> field3() {
        return ViewWwWord.VIEW_WW_WORD.WORD_PRESE;
    }

    @Override
    public Field<String> field4() {
        return ViewWwWord.VIEW_WW_WORD.AS_WORD;
    }

    @Override
    public Field<String> field5() {
        return ViewWwWord.VIEW_WW_WORD.LANG;
    }

    @Override
    public Field<Long> field6() {
        return ViewWwWord.VIEW_WW_WORD.LANG_ORDER_BY;
    }

    @Override
    public Field<Integer> field7() {
        return ViewWwWord.VIEW_WW_WORD.HOMONYM_NR;
    }

    @Override
    public Field<String[]> field8() {
        return ViewWwWord.VIEW_WW_WORD.WORD_TYPE_CODES;
    }

    @Override
    public Field<String> field9() {
        return ViewWwWord.VIEW_WW_WORD.DISPLAY_MORPH_CODE;
    }

    @Override
    public Field<String> field10() {
        return ViewWwWord.VIEW_WW_WORD.GENDER_CODE;
    }

    @Override
    public Field<String> field11() {
        return ViewWwWord.VIEW_WW_WORD.ASPECT_CODE;
    }

    @Override
    public Field<String> field12() {
        return ViewWwWord.VIEW_WW_WORD.VOCAL_FORM;
    }

    @Override
    public Field<Timestamp> field13() {
        return ViewWwWord.VIEW_WW_WORD.LAST_ACTIVITY_EVENT_ON;
    }

    @Override
    public Field<TypeLangComplexityRecord[]> field14() {
        return ViewWwWord.VIEW_WW_WORD.LANG_COMPLEXITIES;
    }

    @Override
    public Field<TypeMeaningWordRecord[]> field15() {
        return ViewWwWord.VIEW_WW_WORD.MEANING_WORDS;
    }

    @Override
    public Field<TypeDefinitionRecord[]> field16() {
        return ViewWwWord.VIEW_WW_WORD.DEFINITIONS;
    }

    @Override
    public Field<String[]> field17() {
        return ViewWwWord.VIEW_WW_WORD.OD_WORD_RECOMMENDATIONS;
    }

    @Override
    public Field<BigDecimal> field18() {
        return ViewWwWord.VIEW_WW_WORD.FREQ_VALUE;
    }

    @Override
    public Field<Long> field19() {
        return ViewWwWord.VIEW_WW_WORD.FREQ_RANK;
    }

    @Override
    public Field<Boolean> field20() {
        return ViewWwWord.VIEW_WW_WORD.FORMS_EXIST;
    }

    @Override
    public Field<Long> field21() {
        return ViewWwWord.VIEW_WW_WORD.MIN_DS_ORDER_BY;
    }

    @Override
    public Field<Long> field22() {
        return ViewWwWord.VIEW_WW_WORD.WORD_TYPE_ORDER_BY;
    }

    @Override
    public Long component1() {
        return getWordId();
    }

    @Override
    public String component2() {
        return getWord();
    }

    @Override
    public String component3() {
        return getWordPrese();
    }

    @Override
    public String component4() {
        return getAsWord();
    }

    @Override
    public String component5() {
        return getLang();
    }

    @Override
    public Long component6() {
        return getLangOrderBy();
    }

    @Override
    public Integer component7() {
        return getHomonymNr();
    }

    @Override
    public String[] component8() {
        return getWordTypeCodes();
    }

    @Override
    public String component9() {
        return getDisplayMorphCode();
    }

    @Override
    public String component10() {
        return getGenderCode();
    }

    @Override
    public String component11() {
        return getAspectCode();
    }

    @Override
    public String component12() {
        return getVocalForm();
    }

    @Override
    public Timestamp component13() {
        return getLastActivityEventOn();
    }

    @Override
    public TypeLangComplexityRecord[] component14() {
        return getLangComplexities();
    }

    @Override
    public TypeMeaningWordRecord[] component15() {
        return getMeaningWords();
    }

    @Override
    public TypeDefinitionRecord[] component16() {
        return getDefinitions();
    }

    @Override
    public String[] component17() {
        return getOdWordRecommendations();
    }

    @Override
    public BigDecimal component18() {
        return getFreqValue();
    }

    @Override
    public Long component19() {
        return getFreqRank();
    }

    @Override
    public Boolean component20() {
        return getFormsExist();
    }

    @Override
    public Long component21() {
        return getMinDsOrderBy();
    }

    @Override
    public Long component22() {
        return getWordTypeOrderBy();
    }

    @Override
    public Long value1() {
        return getWordId();
    }

    @Override
    public String value2() {
        return getWord();
    }

    @Override
    public String value3() {
        return getWordPrese();
    }

    @Override
    public String value4() {
        return getAsWord();
    }

    @Override
    public String value5() {
        return getLang();
    }

    @Override
    public Long value6() {
        return getLangOrderBy();
    }

    @Override
    public Integer value7() {
        return getHomonymNr();
    }

    @Override
    public String[] value8() {
        return getWordTypeCodes();
    }

    @Override
    public String value9() {
        return getDisplayMorphCode();
    }

    @Override
    public String value10() {
        return getGenderCode();
    }

    @Override
    public String value11() {
        return getAspectCode();
    }

    @Override
    public String value12() {
        return getVocalForm();
    }

    @Override
    public Timestamp value13() {
        return getLastActivityEventOn();
    }

    @Override
    public TypeLangComplexityRecord[] value14() {
        return getLangComplexities();
    }

    @Override
    public TypeMeaningWordRecord[] value15() {
        return getMeaningWords();
    }

    @Override
    public TypeDefinitionRecord[] value16() {
        return getDefinitions();
    }

    @Override
    public String[] value17() {
        return getOdWordRecommendations();
    }

    @Override
    public BigDecimal value18() {
        return getFreqValue();
    }

    @Override
    public Long value19() {
        return getFreqRank();
    }

    @Override
    public Boolean value20() {
        return getFormsExist();
    }

    @Override
    public Long value21() {
        return getMinDsOrderBy();
    }

    @Override
    public Long value22() {
        return getWordTypeOrderBy();
    }

    @Override
    public ViewWwWordRecord value1(Long value) {
        setWordId(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value2(String value) {
        setWord(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value3(String value) {
        setWordPrese(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value4(String value) {
        setAsWord(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value5(String value) {
        setLang(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value6(Long value) {
        setLangOrderBy(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value7(Integer value) {
        setHomonymNr(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value8(String[] value) {
        setWordTypeCodes(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value9(String value) {
        setDisplayMorphCode(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value10(String value) {
        setGenderCode(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value11(String value) {
        setAspectCode(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value12(String value) {
        setVocalForm(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value13(Timestamp value) {
        setLastActivityEventOn(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value14(TypeLangComplexityRecord[] value) {
        setLangComplexities(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value15(TypeMeaningWordRecord[] value) {
        setMeaningWords(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value16(TypeDefinitionRecord[] value) {
        setDefinitions(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value17(String[] value) {
        setOdWordRecommendations(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value18(BigDecimal value) {
        setFreqValue(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value19(Long value) {
        setFreqRank(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value20(Boolean value) {
        setFormsExist(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value21(Long value) {
        setMinDsOrderBy(value);
        return this;
    }

    @Override
    public ViewWwWordRecord value22(Long value) {
        setWordTypeOrderBy(value);
        return this;
    }

    @Override
    public ViewWwWordRecord values(Long value1, String value2, String value3, String value4, String value5, Long value6, Integer value7, String[] value8, String value9, String value10, String value11, String value12, Timestamp value13, TypeLangComplexityRecord[] value14, TypeMeaningWordRecord[] value15, TypeDefinitionRecord[] value16, String[] value17, BigDecimal value18, Long value19, Boolean value20, Long value21, Long value22) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        value22(value22);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewWwWordRecord
     */
    public ViewWwWordRecord() {
        super(ViewWwWord.VIEW_WW_WORD);
    }

    /**
     * Create a detached, initialised ViewWwWordRecord
     */
    public ViewWwWordRecord(Long wordId, String word, String wordPrese, String asWord, String lang, Long langOrderBy, Integer homonymNr, String[] wordTypeCodes, String displayMorphCode, String genderCode, String aspectCode, String vocalForm, Timestamp lastActivityEventOn, TypeLangComplexityRecord[] langComplexities, TypeMeaningWordRecord[] meaningWords, TypeDefinitionRecord[] definitions, String[] odWordRecommendations, BigDecimal freqValue, Long freqRank, Boolean formsExist, Long minDsOrderBy, Long wordTypeOrderBy) {
        super(ViewWwWord.VIEW_WW_WORD);

        set(0, wordId);
        set(1, word);
        set(2, wordPrese);
        set(3, asWord);
        set(4, lang);
        set(5, langOrderBy);
        set(6, homonymNr);
        set(7, wordTypeCodes);
        set(8, displayMorphCode);
        set(9, genderCode);
        set(10, aspectCode);
        set(11, vocalForm);
        set(12, lastActivityEventOn);
        set(13, langComplexities);
        set(14, meaningWords);
        set(15, definitions);
        set(16, odWordRecommendations);
        set(17, freqValue);
        set(18, freqRank);
        set(19, formsExist);
        set(20, minDsOrderBy);
        set(21, wordTypeOrderBy);
    }
}
