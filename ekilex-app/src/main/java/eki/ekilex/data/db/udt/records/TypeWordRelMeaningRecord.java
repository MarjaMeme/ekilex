/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.udt.records;


import eki.ekilex.data.db.udt.TypeWordRelMeaning;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypeWordRelMeaningRecord extends UDTRecordImpl<TypeWordRelMeaningRecord> implements Record4<Long, String[], String[], String[]> {

    private static final long serialVersionUID = -1608667717;

    /**
     * Setter for <code>public.type_word_rel_meaning.meaning_id</code>.
     */
    public void setMeaningId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.type_word_rel_meaning.meaning_id</code>.
     */
    public Long getMeaningId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.type_word_rel_meaning.definitions</code>.
     */
    public void setDefinitions(String[] value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.type_word_rel_meaning.definitions</code>.
     */
    public String[] getDefinitions() {
        return (String[]) get(1);
    }

    /**
     * Setter for <code>public.type_word_rel_meaning.lex_register_codes</code>.
     */
    public void setLexRegisterCodes(String[] value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.type_word_rel_meaning.lex_register_codes</code>.
     */
    public String[] getLexRegisterCodes() {
        return (String[]) get(2);
    }

    /**
     * Setter for <code>public.type_word_rel_meaning.lex_pos_codes</code>.
     */
    public void setLexPosCodes(String[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.type_word_rel_meaning.lex_pos_codes</code>.
     */
    public String[] getLexPosCodes() {
        return (String[]) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String[], String[], String[]> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String[], String[], String[]> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TypeWordRelMeaning.MEANING_ID;
    }

    @Override
    public Field<String[]> field2() {
        return TypeWordRelMeaning.DEFINITIONS;
    }

    @Override
    public Field<String[]> field3() {
        return TypeWordRelMeaning.LEX_REGISTER_CODES;
    }

    @Override
    public Field<String[]> field4() {
        return TypeWordRelMeaning.LEX_POS_CODES;
    }

    @Override
    public Long component1() {
        return getMeaningId();
    }

    @Override
    public String[] component2() {
        return getDefinitions();
    }

    @Override
    public String[] component3() {
        return getLexRegisterCodes();
    }

    @Override
    public String[] component4() {
        return getLexPosCodes();
    }

    @Override
    public Long value1() {
        return getMeaningId();
    }

    @Override
    public String[] value2() {
        return getDefinitions();
    }

    @Override
    public String[] value3() {
        return getLexRegisterCodes();
    }

    @Override
    public String[] value4() {
        return getLexPosCodes();
    }

    @Override
    public TypeWordRelMeaningRecord value1(Long value) {
        setMeaningId(value);
        return this;
    }

    @Override
    public TypeWordRelMeaningRecord value2(String[] value) {
        setDefinitions(value);
        return this;
    }

    @Override
    public TypeWordRelMeaningRecord value3(String[] value) {
        setLexRegisterCodes(value);
        return this;
    }

    @Override
    public TypeWordRelMeaningRecord value4(String[] value) {
        setLexPosCodes(value);
        return this;
    }

    @Override
    public TypeWordRelMeaningRecord values(Long value1, String[] value2, String[] value3, String[] value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TypeWordRelMeaningRecord
     */
    public TypeWordRelMeaningRecord() {
        super(TypeWordRelMeaning.TYPE_WORD_REL_MEANING);
    }

    /**
     * Create a detached, initialised TypeWordRelMeaningRecord
     */
    public TypeWordRelMeaningRecord(Long meaningId, String[] definitions, String[] lexRegisterCodes, String[] lexPosCodes) {
        super(TypeWordRelMeaning.TYPE_WORD_REL_MEANING);

        set(0, meaningId);
        set(1, definitions);
        set(2, lexRegisterCodes);
        set(3, lexPosCodes);
    }
}
