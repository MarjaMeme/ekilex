/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.tables.records;


import eki.ekilex.data.db.tables.ViewWwCounts;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewWwCountsRecord extends TableRecordImpl<ViewWwCountsRecord> implements Record5<String, String, Long, Long, Long> {

    private static final long serialVersionUID = 1281006479;

    /**
     * Setter for <code>public.view_ww_counts.dataset_code</code>.
     */
    public void setDatasetCode(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.view_ww_counts.dataset_code</code>.
     */
    public String getDatasetCode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.view_ww_counts.lang</code>.
     */
    public void setLang(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.view_ww_counts.lang</code>.
     */
    public String getLang() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.view_ww_counts.word_record_count</code>.
     */
    public void setWordRecordCount(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.view_ww_counts.word_record_count</code>.
     */
    public Long getWordRecordCount() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.view_ww_counts.word_value_count</code>.
     */
    public void setWordValueCount(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.view_ww_counts.word_value_count</code>.
     */
    public Long getWordValueCount() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.view_ww_counts.meaning_record_count</code>.
     */
    public void setMeaningRecordCount(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.view_ww_counts.meaning_record_count</code>.
     */
    public Long getMeaningRecordCount() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, Long, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, Long, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ViewWwCounts.VIEW_WW_COUNTS.DATASET_CODE;
    }

    @Override
    public Field<String> field2() {
        return ViewWwCounts.VIEW_WW_COUNTS.LANG;
    }

    @Override
    public Field<Long> field3() {
        return ViewWwCounts.VIEW_WW_COUNTS.WORD_RECORD_COUNT;
    }

    @Override
    public Field<Long> field4() {
        return ViewWwCounts.VIEW_WW_COUNTS.WORD_VALUE_COUNT;
    }

    @Override
    public Field<Long> field5() {
        return ViewWwCounts.VIEW_WW_COUNTS.MEANING_RECORD_COUNT;
    }

    @Override
    public String component1() {
        return getDatasetCode();
    }

    @Override
    public String component2() {
        return getLang();
    }

    @Override
    public Long component3() {
        return getWordRecordCount();
    }

    @Override
    public Long component4() {
        return getWordValueCount();
    }

    @Override
    public Long component5() {
        return getMeaningRecordCount();
    }

    @Override
    public String value1() {
        return getDatasetCode();
    }

    @Override
    public String value2() {
        return getLang();
    }

    @Override
    public Long value3() {
        return getWordRecordCount();
    }

    @Override
    public Long value4() {
        return getWordValueCount();
    }

    @Override
    public Long value5() {
        return getMeaningRecordCount();
    }

    @Override
    public ViewWwCountsRecord value1(String value) {
        setDatasetCode(value);
        return this;
    }

    @Override
    public ViewWwCountsRecord value2(String value) {
        setLang(value);
        return this;
    }

    @Override
    public ViewWwCountsRecord value3(Long value) {
        setWordRecordCount(value);
        return this;
    }

    @Override
    public ViewWwCountsRecord value4(Long value) {
        setWordValueCount(value);
        return this;
    }

    @Override
    public ViewWwCountsRecord value5(Long value) {
        setMeaningRecordCount(value);
        return this;
    }

    @Override
    public ViewWwCountsRecord values(String value1, String value2, Long value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewWwCountsRecord
     */
    public ViewWwCountsRecord() {
        super(ViewWwCounts.VIEW_WW_COUNTS);
    }

    /**
     * Create a detached, initialised ViewWwCountsRecord
     */
    public ViewWwCountsRecord(String datasetCode, String lang, Long wordRecordCount, Long wordValueCount, Long meaningRecordCount) {
        super(ViewWwCounts.VIEW_WW_COUNTS);

        set(0, datasetCode);
        set(1, lang);
        set(2, wordRecordCount);
        set(3, wordValueCount);
        set(4, meaningRecordCount);
    }
}
